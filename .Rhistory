foo
for (i in 1:10) {print(i)}
for (i in 1:10) {print(foo[i,1])}
for (i in 1:10) {print(foo[i,2])}
for (i in 1:10) {print(foo[i,c("dogs")])}
for (i in 1:10) {print(foo[i,c("hats","dogs")])}
for (i in 1:10) {print(foo[i,c("hat","dogs")])}
libray(XML)
library(XML)
ref_page<-htmlTreeParse(readLines(url,warn=F),useInternalNodes=T)
url<-"http://www.basketball-reference.com/players/a/abdulka01.html"
url
ref_page<-htmlTreeParse(readLines(url,warn=F),useInternalNodes=T)
?readlines
?readLines
readLines(url)
a<-readLines(url)
class(a)
htmlTreeParse(readLines(url))
a<-htmlTreeParse(readLines(url))
head(a)
class(a)
b<-readLines(url)
class(b)
b$totals
a$totals
readHTMLtable(a)
readHTMLTable(a)
page<-htmlTreeParse(readLines(url,warn=F),useInternalNodes=T)
readHTMLTable(page)
tables<-readHTMLTable(page)
tables
names(tables)
class(tables)
tables$table
tables$totals
tables$totals$Season
sum(tables$totals$FG)
class(tables$totals)
tables<-readHTMLTable(page,stringsAsFactors=F)
sum(tables$totals$FG)
class(tables$totals$FG)
class(as.numeric(tables$totals$FG))
sum(as.numeric(tables$totals$FG))
total_stats<-tables$totals
class(total_stats)
class(total_stats$PTS)
tables<-readHTMLTable(page)
total_stats<-tables$totals
class(total_stats$PTS)
class(as.numeric(total_stats$PTS))
(as.numeric(total_stats$PTS))
sum(as.numeric(total_stats$PTS))
sum(as.numeric(as.character(total_stats$PTS)))
page<-htmlTreeParse(readLines(url,warn=F),useInternalNodes=T)#
	tables<-readHTMLTable(page,stringsAsFactors=F)#
	total_stats<-tables$totals#
	total_points<-sum(as.numeric(total_stats$PTS))
total_points
data.frame(url=url,player=Player_name,pts=total_points)
player_name<-"Kareem"
data.frame(url=url,player=Player_name,pts=total_points)
get_total_points<-function(url,player_name) {#
#
	page<-htmlTreeParse(readLines(url,warn=F),useInternalNodes=T)#
	tables<-readHTMLTable(page,stringsAsFactors=F)#
	total_stats<-tables$totals#
	total_points<-sum(as.numeric(total_stats$PTS))#
	return data.frame(url=url,player=Player_name,pts=total_points)#
#
}
data.frame(url=url,player=Player_name,pts=total_points)
player_name<-"Kareem"
(data.frame(url=url,player=player_name,pts=total_points))
get_total_points<-function(url,player_name) {#
	page<-htmlTreeParse(readLines(url,warn=F),useInternalNodes=T)#
	tables<-readHTMLTable(page,stringsAsFactors=F)#
	total_stats<-tables$totals#
	total_points<-sum(as.numeric(total_stats$PTS))#
	return (data.frame(url=url,player=player_name,pts=total_points))#
}
carmeloURL<-"http://www.basketball-reference.com/players/a/anthoca01.html"
get_total_points(carmelo_url,"Carmelo Anthony")
carmelo_url<-"http://www.basketball-reference.com/players/a/anthoca01.html"
get_total_points(carmelo_url,"Carmelo Anthony")
readLines(url)
setwd("/Users/200708/Desktop/working")
setwd("/Users/200708/NYT-projects/case-shiller/working")
data <- read.delim("../public/_assets/case-shiller.tsv")
head(data)
names(data)
?reshape
ry(Indometh)#
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",#
                timevar = "time", direction = "wide")#
wide
reshape(wide, direction = "long")
head(wide)
head(data)
reshape(data, direction="long", v.names="SPCS")
reshape(data, direction="long", v.names="SPCS", timevar="date")
reshape(data, direction="long", v.names="SPCS", timevar="date", varying=list(2:12))
names(data)
reshape(data, direction="long", v.names="SPCS", timevar="date", varying=list(1:21))
reshape(data, direction="long", timevar="date", varying=list(1:21))
reshape(data, direction="long",  varying=list(1:21))
head(reshape(data, direction="long",  varying=list(1:21)))
head(data)
?reshape
head(reshape(data, direction="long",  varying=list(1:21)))
moo <- (reshape(data, direction="long",  varying=list(1:21)))
moo$city <- names(data)[moo$time]
head(moo)
names(moo)
moo[,-c(2)]
names(moo)
moo[,-c(2,4)]
moo <- moo[,-c(2,4)]
names(moo)
names(moo)[2]<-"val"
data <- read.delim("../public/_assets/case-shiller.tsv")#
#
moo <- (reshape(data, direction="long",  varying=list(1:21)))#
moo$city <- names(data)[moo$time]#
moo <- moo[,-c(2,4)]#
names(moo)[2]<-"val"#
#
write.csv(moo, file="../public/_assets/case-shiller-long.csv")
nrow(moo)
is.na(moo$val)
sum(is.na(moo$val))
moo<- moo[!is.na(moo$val),]
nrow(moo)
setwd("/Users/200708/NYT-projects/case-shiller/working")#
#
data <- read.delim("../public/_assets/case-shiller.tsv")#
#
moo <- (reshape(data, direction="long",  varying=list(1:21)))#
moo$city <- names(data)[moo$time]#
moo <- moo[,-c(2,4)]#
names(moo)[2]<-"val"#
moo<- moo[!is.na(moo$val),]#
write.csv(moo, file="../public/_assets/case-shiller-long.csv")
ls()
head(data)
setwd("/Users/200708/NYT-projects/baseball-disabled-list/working/")
load("data/salaries.Rdata")
ls()
head(salaries)
load("data/disabled-list.Rdata")
ls()
head(dl)
load("data/disabled.Rdata")
ls()
head(dl)
load("data/bball-prospectus-salaries.Rdata")
ls()
head(salaries)
setwd("~/personal")
dir()
setwd("~/personal/sherp-31")
write.csv(salaries, file="assets/data/salaries.csv")
setwd("/Users/200708/NYT-projects/baseball-disabled-list/working/")
dir()
library(XML)#
library(stringr)#
get.roster.info.for.team <- function(teamcode) {#
  url <- paste("http://mlb.mlb.com/team/roster_40man.jsp?c_id=", teamcode, sep="")#
  page <- htmlTreeParse(readLines(url), useInternalNodes=T)#
  playersraw <- sapply(getNodeSet(page, "//table//tr//td[2]"), xmlValue)#
  cleanplayers <- str_trim(gsub("\n|\t", "", playersraw))#
  playernames <- sapply(getNodeSet(page, "//table//tr//td[2]//a"), xmlValue)#
  dobs <- sapply(getNodeSet(page, "//table//tr//td[6]"), xmlValue)#
  df <- data.frame(name=playernames, dob = dobs)#
  df$active <- 1#
  df$active[grep("\\*", cleanplayers)] <- 0#
  df$dl <- 0#
  df$dl[grep("day DL", cleanplayers)] <- 1#
#
  df$dltype <- ""#
  df$dltype[which(df$dl == 1)] <- sapply(getNodeSet(page, "//table//tr//td[2]//span"), xmlValue)#
#
  df$dltype <- gsub(" DL |\\*", "", df$dltype)#
#
  df$teamcode <- teamcode#
#
  return (df)#
}#
#
load("data/bball-prospectus-salaries.Rdata")#
# download DL information.#
american <- c("bos","nyy","bal","tb","tor","det","kc","min","cle","cws","tex","oak","sea","ana","hou"  )#
national <- c("atl","was","phi","nym","mia","stl","mil","pit","cin","chc","col","ari","sf","la","sd"  )#
#
rosters <- NULL#
for (i in c(american, national)) {#
  print(i)#
  f <- get.roster.info.for.team(i)#
  rosters <- rbind(rosters, f)#
}#
names(rosters)[1] <- "player"#
dl <- subset(rosters, dl == 1)#
disabled.with.salaries <- merge(dl, salaries[,c("player","salary", "pos")], all.x=T, by="player")
disabled.with.salaries
bad <- disabled.with.salaries[is.na(disabled.with.salaries$salary),]#
print("I couldn't find the salaries for these players: ")#
print ( bad )#
print ("----------------")
head(dl)
setwd("~/personal")
write.csv(dl, file="assets/data/disabled-list.csv")
head(dl)
setwd("~/personal/sherp-31")
write.csv(dl, file="assets/data/disabled-list.csv")
head(salaries)
head(dl)
head(disabled.with.salaries)
write.csv(disabled.with.salaries, file="./assets/data/merged-dl.csv")
subset(salaries, team == "NYY")
salaries$team
table(salaries$team)
subset(salaries, team == "NYA")
table(subset(salaries, team == "NYA")$pos)
table(subset(salaries, team == "MIN")$pos)
subset(data, salary > 1000000)
subset(salaries, salary > 1000000)
table(salaryes$salary>1000000)
table(salaries$salary>1000000)
aggregate(salaries$salary, list(salaries$team), sum)
barplot(aggregate(salaries$salary, list(salaries$team), sum))
barplot(aggregate(salaries$salary, list(salaries$team), sum)$x)
min(salaries$salary)
mode(salaries$salary)
?mode
median(salaries$salary)
max(salaries$salary)
table(salaryes$salary==490000)
table(salaries$salary==490000)
table(salaries$salary<490000)
table(salaries$salary<500000)
smode<-function(x){#
	xtab<-table(x)#
	modes<-xtab[max(xtab)==xtab]#
	mag<-as.numeric(modes[1]) #in case mult. modes, this is safer#
	themodes<-names(modes)#
	mout<-list(themodes=themodes,modeval=mag)#
	return(mout)#
	}
smode(salaries$salary)
table(salaries$salary<2000000)
teams <- aggregate(salaries, list(data$team), sum)
teams <- aggregate(salaries, list(salaries$team), sum)
teams <- aggregate(salaries$salary, list(salaries$team), sum)
teams
teams <- teams[order(teams$x),]
teams
219606125 + 223126072
sum(teams$x[1:nrow(teams-2)])
sum(teams$x[1:nrow(teams)-2])
(teams$x[1:nrow(teams)-2])
teams$x[1:(nrow(teams)-2)]
sum(teams$x[1:(nrow(teams)-2)])
sum(teams$x[(nrow(teams)-2):nrow(teams)])/sum(teams$x[1:(nrow(teams)-2)])
442732197 / sum(teams$x[1:(nrow(teams)-2)])
sum(teams$x)[1:10]> 442732197
sum(teams$x[1:10]) > 442732197
sum(teams$x[1:15]) > 442732197
sum(teams$x[1:20]) > 442732197
sum(teams$x[1:25]) > 442732197
sum(teams$x[1:27]) > 442732197
nrow(teams)
sum(teams$x[1:28]) > 442732197
sum(teams$x[1:29]) > 442732197
sum(teams$x)
sum(teams$x[1:30]) > 442732197
teams[,29]
teams[29,]
teams
subset(salaries, team=="NYA")
nyy <- subset(salaries, team=="NYA")
sum(nyy$x)
sum(nyy$salary)
nrow(nyy)
teams[,31:32]
teams[31:32,]
nrow(tea,s)
nrow(teams)
teams[29:30,]
teams[29:30,c('x')]
sum(teams[29:30,c('x')])
sum(teams[29:30,c('x')]) > sum(teams[1:10,c('x')])
sum(teams[29:30,c('x')]) > sum(teams[1:2,c('x')])
sum(teams[29:30,c('x')]) > sum(teams[1:5,c('x')])
sum(teams[29:30,c('x')]) > sum(teams[1:8,c('x')])
barplot(teams$x)
barplot(teams$x, beside=T)
barplot(teams$x, horiz=T)
teams
223126072/21105600
mean(salaries$salary)
mean(salaries$salary)/162
aggregate(salaries, list(salaries$position), mean)
head(salaries)
aggregate(salaries, list(salaries$pos), mean)
warnings()
aggregate(salaries$salary, list(salaries$pos), mean)
pos <-  aggregate(salaries$salary, list(salaries$pos), mean)
pos
pos <- pos[order(pos$x, decreasing=T),]
pos
barplot(pos$x)
pos <- pos[order(pos$x),]
barplot(pos$x, horiz=T)
barplot(pos$x, horiz=T, names.aarg=pos$Group.1)
barplot(pos$x, horiz=T, names.arg=pos$Group.1)
aggregate(salaries$salary, list(salaries$pos), median)
med <- aggregate(salaries$salary, list(salaries$pos), median)
pos
pos <- pos[order(med$Group.1),]
pos
med
pos <- pos[order(pos$Group.1),]
pos
med <- med[order(med$Group.1),]
med
rbind(med, pos)
cbind(med, pos)
plot(pos$x)
foo <- cbind(med, pos)
foo
foo$x
subset(salaries, name=="Alex Rodriguez")
head(salaries)
subset(salaries, player=="Alex Rodriguez")
